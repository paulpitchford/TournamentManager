// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TournamentManager.DataAccess;

#nullable disable

namespace TournamentManager.DataAccess.Migrations
{
    [DbContext(typeof(PokerDbContext))]
    [Migration("20230213160627_Results")]
    partial class Results
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Buyin")
                        .HasColumnType("float");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<DateTime>("GameDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameDetails")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GameTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("GameTypeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PublishResults")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SeasonId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VenueId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameTypeId");

                    b.HasIndex("SeasonId");

                    b.HasIndex("VenueId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            Buyin = 35.0,
                            Fee = 5.0,
                            GameDateTime = new DateTime(2021, 1, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            GameDetails = "League game 1, £40 buy in.",
                            GameTitle = "Game 1",
                            GameTypeId = new Guid("dbb07104-cffa-4539-91ce-1d0e5ecce2e0"),
                            PublishResults = false,
                            SeasonId = new Guid("1b0c1ad0-e4f5-4fb6-98a4-e5e2a2d5e24e"),
                            VenueId = new Guid("63c0255e-ecde-4edf-8a7f-3ecf026bba3d")
                        },
                        new
                        {
                            Id = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            Buyin = 35.0,
                            Fee = 5.0,
                            GameDateTime = new DateTime(2021, 2, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            GameDetails = "League game 2, £40 buy in.",
                            GameTitle = "Game 2",
                            GameTypeId = new Guid("dbb07104-cffa-4539-91ce-1d0e5ecce2e0"),
                            PublishResults = false,
                            SeasonId = new Guid("1b0c1ad0-e4f5-4fb6-98a4-e5e2a2d5e24e"),
                            VenueId = new Guid("63c0255e-ecde-4edf-8a7f-3ecf026bba3d")
                        },
                        new
                        {
                            Id = new Guid("85eaff7b-dd27-4e43-8976-f10eb415bf61"),
                            Buyin = 35.0,
                            Fee = 5.0,
                            GameDateTime = new DateTime(2021, 3, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            GameDetails = "League game 3, £40 buy in.",
                            GameTitle = "Game 3",
                            GameTypeId = new Guid("dbb07104-cffa-4539-91ce-1d0e5ecce2e0"),
                            PublishResults = false,
                            SeasonId = new Guid("1b0c1ad0-e4f5-4fb6-98a4-e5e2a2d5e24e"),
                            VenueId = new Guid("63c0255e-ecde-4edf-8a7f-3ecf026bba3d")
                        },
                        new
                        {
                            Id = new Guid("c9a29408-0b4e-44a8-8a23-c51ddb8b360a"),
                            Buyin = 35.0,
                            Fee = 5.0,
                            GameDateTime = new DateTime(2021, 4, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            GameDetails = "League game 4, £40 buy in.",
                            GameTitle = "Game 4",
                            GameTypeId = new Guid("dbb07104-cffa-4539-91ce-1d0e5ecce2e0"),
                            PublishResults = false,
                            SeasonId = new Guid("1b0c1ad0-e4f5-4fb6-98a4-e5e2a2d5e24e"),
                            VenueId = new Guid("63c0255e-ecde-4edf-8a7f-3ecf026bba3d")
                        },
                        new
                        {
                            Id = new Guid("c08c4989-8d4f-4729-a27d-f762f768cc59"),
                            Buyin = 35.0,
                            Fee = 5.0,
                            GameDateTime = new DateTime(2021, 5, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            GameDetails = "League game 5, £40 buy in.",
                            GameTitle = "Game 5",
                            GameTypeId = new Guid("dbb07104-cffa-4539-91ce-1d0e5ecce2e0"),
                            PublishResults = false,
                            SeasonId = new Guid("1b0c1ad0-e4f5-4fb6-98a4-e5e2a2d5e24e"),
                            VenueId = new Guid("63c0255e-ecde-4edf-8a7f-3ecf026bba3d")
                        },
                        new
                        {
                            Id = new Guid("87450acd-ca09-40c2-883b-aad03402f9dc"),
                            Buyin = 35.0,
                            Fee = 5.0,
                            GameDateTime = new DateTime(2021, 6, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            GameDetails = "League game 6, £40 buy in.",
                            GameTitle = "Game 6",
                            GameTypeId = new Guid("dbb07104-cffa-4539-91ce-1d0e5ecce2e0"),
                            PublishResults = false,
                            SeasonId = new Guid("1b0c1ad0-e4f5-4fb6-98a4-e5e2a2d5e24e"),
                            VenueId = new Guid("63c0255e-ecde-4edf-8a7f-3ecf026bba3d")
                        });
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.GameType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AwardPoints")
                        .HasColumnType("bit");

                    b.Property<string>("GameTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GameTypeName")
                        .IsUnique();

                    b.ToTable("GameTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbb07104-cffa-4539-91ce-1d0e5ecce2e0"),
                            AwardPoints = true,
                            GameTypeName = "League"
                        },
                        new
                        {
                            Id = new Guid("6117db2a-2143-460d-a5cf-7d038caa3c33"),
                            AwardPoints = false,
                            GameTypeName = "Final"
                        },
                        new
                        {
                            Id = new Guid("0bd6aac9-ad90-4fdb-9725-ae363f0d9171"),
                            AwardPoints = false,
                            GameTypeName = "Special"
                        });
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TournamentDirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TournamentDirectorId")
                        .IsUnique()
                        .HasFilter("[TournamentDirectorId] IS NOT NULL");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = new Guid("644d7d1a-57d1-4e70-9963-376369fa73cd"),
                            FirstName = "Paul",
                            LastName = "Pitchford",
                            TournamentDirectorId = new Guid("2f5bafda-b39e-4b87-84af-73f92b1dfecc")
                        },
                        new
                        {
                            Id = new Guid("02f03bbe-dcc3-47c6-bc17-a0dc30822f57"),
                            FirstName = "Adam",
                            LastName = "May"
                        },
                        new
                        {
                            Id = new Guid("f9288114-38dc-445f-ae86-603841f4eca7"),
                            FirstName = "Niamh",
                            LastName = "Warren"
                        },
                        new
                        {
                            Id = new Guid("496f54f9-ab0c-4fd8-8ef5-f09fb1f09dd5"),
                            FirstName = "Malakai",
                            LastName = "Davidson"
                        },
                        new
                        {
                            Id = new Guid("74b97573-79a4-487e-9b26-8c4020f8b395"),
                            FirstName = "Saul",
                            LastName = "Pena"
                        },
                        new
                        {
                            Id = new Guid("d590a981-5caf-4416-83d2-36f5defdd89e"),
                            FirstName = "Fleur",
                            LastName = "Gray"
                        },
                        new
                        {
                            Id = new Guid("99c65e3f-4a41-45c3-ac7d-f6593b2f72c0"),
                            FirstName = "Nevaeh",
                            LastName = "Hatfield"
                        },
                        new
                        {
                            Id = new Guid("916d616d-a760-4a60-8524-bed87bee4411"),
                            FirstName = "Layla",
                            LastName = "Russell"
                        },
                        new
                        {
                            Id = new Guid("50432083-d2c4-4123-b6f7-c5a5d8103928"),
                            FirstName = "Priya",
                            LastName = "Arroyo"
                        },
                        new
                        {
                            Id = new Guid("26b843f6-0af6-40c2-b7be-4320b6232bf0"),
                            FirstName = "Trinity",
                            LastName = "Lin"
                        });
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Result", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cash")
                        .HasColumnType("float");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Points")
                        .HasColumnType("float");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("GameId", "PlayerId")
                        .IsUnique();

                    b.ToTable("Results");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7bdd396b-6918-4c70-a4e3-603f55c458c6"),
                            Cash = 200.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("644d7d1a-57d1-4e70-9963-376369fa73cd"),
                            Points = 200.0,
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("cc851e84-814a-4c7f-826a-044b15ca5034"),
                            Cash = 100.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("02f03bbe-dcc3-47c6-bc17-a0dc30822f57"),
                            Points = 150.0,
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("6ced4a42-898e-4ba9-afe9-39eb1a14798e"),
                            Cash = 75.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("f9288114-38dc-445f-ae86-603841f4eca7"),
                            Points = 100.0,
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("eb438c54-477a-4e09-9084-d453b96f9834"),
                            Cash = 0.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("496f54f9-ab0c-4fd8-8ef5-f09fb1f09dd5"),
                            Points = 75.0,
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("1cd86510-3464-4ef0-90ea-e8b7cac22567"),
                            Cash = 0.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("74b97573-79a4-487e-9b26-8c4020f8b395"),
                            Points = 50.0,
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("34f60507-7c52-4ffe-b282-87a1f3f7ce0c"),
                            Cash = 0.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("d590a981-5caf-4416-83d2-36f5defdd89e"),
                            Points = 25.0,
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("c465c4d8-494a-449d-8b17-72146a752d2b"),
                            Cash = 0.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("99c65e3f-4a41-45c3-ac7d-f6593b2f72c0"),
                            Points = 15.0,
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("9f923e68-afc9-46e7-bb92-d76d3c0825b0"),
                            Cash = 0.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("916d616d-a760-4a60-8524-bed87bee4411"),
                            Points = 15.0,
                            Position = 8
                        },
                        new
                        {
                            Id = new Guid("e5e8347e-d2e3-424e-b007-f5d4966954a0"),
                            Cash = 0.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("50432083-d2c4-4123-b6f7-c5a5d8103928"),
                            Points = 15.0,
                            Position = 9
                        },
                        new
                        {
                            Id = new Guid("2f905b1d-648f-4a70-beca-c71c77d6ce49"),
                            Cash = 0.0,
                            GameId = new Guid("6fee60f0-55e4-4cb0-acdc-609de32094be"),
                            PlayerId = new Guid("26b843f6-0af6-40c2-b7be-4320b6232bf0"),
                            Points = 15.0,
                            Position = 10
                        },
                        new
                        {
                            Id = new Guid("bb09a001-830e-4e70-b6ac-b4b9790e59fd"),
                            Cash = 200.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("26b843f6-0af6-40c2-b7be-4320b6232bf0"),
                            Points = 200.0,
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("07636c15-e4dc-4773-984e-75345884b7c1"),
                            Cash = 100.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("50432083-d2c4-4123-b6f7-c5a5d8103928"),
                            Points = 150.0,
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("22b3aa24-66b9-46f6-8cf3-4f5e6b033f45"),
                            Cash = 75.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("916d616d-a760-4a60-8524-bed87bee4411"),
                            Points = 100.0,
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("cad67546-e0b2-461e-8869-e7325a770114"),
                            Cash = 0.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("99c65e3f-4a41-45c3-ac7d-f6593b2f72c0"),
                            Points = 75.0,
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("6a2c53e5-058b-4fe0-bd10-f30404e2700e"),
                            Cash = 0.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("d590a981-5caf-4416-83d2-36f5defdd89e"),
                            Points = 50.0,
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("92b0c68f-391d-42dc-8a00-6649749467cb"),
                            Cash = 0.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("74b97573-79a4-487e-9b26-8c4020f8b395"),
                            Points = 25.0,
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("33b3383c-598a-4933-a8b4-d9dc37ea469c"),
                            Cash = 0.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("496f54f9-ab0c-4fd8-8ef5-f09fb1f09dd5"),
                            Points = 15.0,
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("1400ba4b-0cbd-4ef8-94a3-5b711f8e11cb"),
                            Cash = 0.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("f9288114-38dc-445f-ae86-603841f4eca7"),
                            Points = 15.0,
                            Position = 8
                        },
                        new
                        {
                            Id = new Guid("d0c911ad-5812-46eb-906c-fc83e9c97522"),
                            Cash = 0.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("02f03bbe-dcc3-47c6-bc17-a0dc30822f57"),
                            Points = 15.0,
                            Position = 9
                        },
                        new
                        {
                            Id = new Guid("f2577898-1878-4309-9094-a94fa288f577"),
                            Cash = 0.0,
                            GameId = new Guid("ff143321-2b4b-4b7b-adf3-57dc0beec786"),
                            PlayerId = new Guid("644d7d1a-57d1-4e70-9963-376369fa73cd"),
                            Points = 15.0,
                            Position = 10
                        });
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Season", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SeasonName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SeasonName")
                        .IsUnique();

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b0c1ad0-e4f5-4fb6-98a4-e5e2a2d5e24e"),
                            SeasonName = "Season One",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7a0cf45d-7423-4aea-b7a5-aa0c571d5b05"),
                            SeasonName = "Season Two",
                            StartDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e007944b-bda8-42bf-9d1e-1d7894f98ff5"),
                            SeasonName = "Season Three",
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Venue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExtraInformation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FacebookAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WebAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("VenueName")
                        .IsUnique();

                    b.ToTable("Venues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("63c0255e-ecde-4edf-8a7f-3ecf026bba3d"),
                            Address = "High Pavement",
                            County = "Nottinghamshire",
                            PostCode = "NG17 4BA",
                            Town = "Sutton in Ashfield",
                            VenueName = "The Devonshire Arms"
                        },
                        new
                        {
                            Id = new Guid("cb29fe0d-e42c-4a8a-9ab9-839caeb9d4ea"),
                            Address = "High Pavement",
                            County = "Nottinghamshire",
                            PostCode = "NG17 4BD",
                            Town = "Sutton in Ashfield",
                            VenueName = "Josephs Club"
                        },
                        new
                        {
                            Id = new Guid("ae24627e-9e05-4529-b6ff-5917d6b8038e"),
                            Address = "Sutton Road",
                            County = "Nottinghamshire",
                            PostCode = "NG17 7GZ",
                            Town = "Kirkby in Ashfield",
                            VenueName = "Bentinck Social Club"
                        });
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Game", b =>
                {
                    b.HasOne("TournamentManager.Infrastructure.Entities.GameType", "GameType")
                        .WithMany("Games")
                        .HasForeignKey("GameTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TournamentManager.Infrastructure.Entities.Season", "Season")
                        .WithMany("Games")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TournamentManager.Infrastructure.Entities.Venue", "Venue")
                        .WithMany("Games")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GameType");

                    b.Navigation("Season");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Result", b =>
                {
                    b.HasOne("TournamentManager.Infrastructure.Entities.Game", "Game")
                        .WithMany("Results")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TournamentManager.Infrastructure.Entities.Player", "Player")
                        .WithMany("Results")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Game", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.GameType", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Player", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Season", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("TournamentManager.Infrastructure.Entities.Venue", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
