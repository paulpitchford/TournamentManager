@using TournamentManager.Infrastructure.Entities
@using TournamentManager.Infrastructure.Enums;
@using TournamentManager.Infrastructure.Extensions;

@if (PointStructure != null)
{
    <EditForm Model="PointStructure" OnValidSubmit="OnSubmit">
        <FluentValidationValidator />

        <div class="row mb-3">
            <label for="point-structure-description" class="col-sm-2 col-form-label">Description</label>
            <div class="col-sm-10">
                <InputText class="form-control" id="point-structure-description" @bind-Value="PointStructure.PointStructureDescription" />
                <ValidationMessage For="() => PointStructure.PointStructureDescription" />
            </div>
        </div>

        <div class="row mb-3">
            <label for="default-points" class="col-sm-2 col-form-label">Default Points</label>
            <div class="col-sm-10">
                <InputNumber class="form-control" id="default-points" @bind-Value="PointStructure.DefaultPoints" />
                <ValidationMessage For="() => PointStructure.DefaultPoints" />
            </div>
        </div>

        <button class="btn btn-primary" type="submit">Save</button>
        <button class="btn btn-secondary" type="button" @onclick="OnCancel">Back</button>
    </EditForm>

    <EditForm Model="pointPosition" OnValidSubmit="AddPosition">
        <button class="btn btn-primary" type="submit">Add Position</button>

        <InputNumber @bind-Value="pointPosition.Position" />
        <InputNumber @bind-Value="pointPosition.Points" />
        <InputSelect @bind-Value="pointPosition.MultiplierType">
            @foreach (PointPositionMultiplierType multiplierType in Enum.GetValues(typeof(PointPositionMultiplierType)))
            {
                <SelectItem Value="@multiplierType">@multiplierType.GetDisplayName()</SelectItem>
            }
        </InputSelect>
        @if (pointPosition.MultiplierType == PointPositionMultiplierType.MultiplierValue)
        {
            <InputNumber @bind-Value="pointPosition.MultiplierValue" />
        }
        else
        {
            pointPosition.MultiplierValue = 0;
        }

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Position</th>
                    <th>Points</th>
                    <th>Multiplier Type</th>
                    <th>Multiplier Value</th>
                </tr>
            </thead>
            <tbody>
                @foreach (PointPosition position in PointStructure.PointPositions.OrderBy(p => p.Position))
                {
                    <tr>
                        <td>@position.Position</td>
                        <td>@position.Points</td>
                        <td>@position.MultiplierType.GetDisplayName()</td>
                        <td>
                            @if (position.MultiplierType == PointPositionMultiplierType.MultiplierValue)
                            {
                                @position.MultiplierValue
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </EditForm>
}

@code {
    [CascadingParameter]
    PointStructure? PointStructure { get; set; }

    [Parameter]
    public EventCallback OnSubmit { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    PointPosition pointPosition = new PointPosition();

    private void AddPosition()
    {
        if (PointStructure != null)
        {
            PointStructure.PointPositions.Add(pointPosition);
            pointPosition = new PointPosition();
        }
    }
}
